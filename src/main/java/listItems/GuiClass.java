

package listItems;

public class GuiClass extends javax.swing.JFrame {
    
    List base = new List();
    boolean edit = false;
    
    public void setLabel () {
        if (listaBox.isEnabled()){
            int index = listaBox.getSelectedIndex();
        
            if (index != -1) {
                jTextField1.setText(base.list.get(index).getOnlyDetail());
            }
        
            jTextField1.setEditable(false);
            clearTask.setEnabled(true); 
        }
    }
    
    public void toggleList () {
        if (edit == false) {
            jTextField1.setText(null);
        }
        listaBox.setEnabled(!listaBox.isEnabled());
        jTextField1.setEditable(!jTextField1.isEditable());
    }
    

    /**
     * Creates new form FrameTest
     */
    public GuiClass() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        listaBox = new javax.swing.JList<>();
        jPanel1 = new javax.swing.JPanel();
        addEditTask = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        clearTask = new javax.swing.JButton();
        taskDone = new javax.swing.JButton();
        editButton = new javax.swing.JButton();
        clearAll = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Haettenschweiler", 0, 18)); // NOI18N
        jLabel1.setText("L I S T A    P R O T O T I P O    1");

        listaBox.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = base.getArrayList();
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        listaBox.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                listaBoxMouseDragged(evt);
            }
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                listaBoxMouseMoved(evt);
            }
        });
        listaBox.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                listaBoxFocusGained(evt);
            }
        });
        listaBox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listaBoxMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(listaBox);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        addEditTask.setBackground(new java.awt.Color(153, 255, 102));
        addEditTask.setText("New Task / OK");
        addEditTask.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addEditTaskMouseClicked(evt);
            }
        });

        clearTask.setText("Clear Task");
        clearTask.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                clearTaskMouseClicked(evt);
            }
        });

        taskDone.setText("Toggle State");
        taskDone.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                taskDoneMouseClicked(evt);
            }
        });

        editButton.setText("Edit");
        editButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                editButtonMouseClicked(evt);
            }
        });

        clearAll.setText("Clear All");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jTextField1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(addEditTask)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(editButton, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 87, Short.MAX_VALUE)
                        .addComponent(clearAll, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(taskDone, javax.swing.GroupLayout.DEFAULT_SIZE, 97, Short.MAX_VALUE)
                    .addComponent(clearTask, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(taskDone))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addEditTask)
                    .addComponent(clearTask)
                    .addComponent(editButton)
                    .addComponent(clearAll))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 178, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addGap(187, 187, 187))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane1))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addEditTaskMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addEditTaskMouseClicked
        //Este es la adicion y confirmacion
        //La primera Opcion es para agregar una nueva tarea 
        if (listaBox.isEnabled() && edit == false){
            listaBox.setSelectedIndex(-1);
            toggleList();
        //Confirma la Tarea a agregar solo si se a escrito algo
        } else if (!listaBox.isEnabled() && edit == false) {
            String detailOfNewTask = jTextField1.getText();
            if (!detailOfNewTask.isEmpty()){
                base.addTask(detailOfNewTask);
                toggleList();
                listaBox.setListData(base.getArrayList());
            }
        //Cofirma la edicion solo si esta no esta vacia
        } else if (!listaBox.isEnabled() && edit != false) {
            String detailOfNewTask = jTextField1.getText();
            if (!detailOfNewTask.isEmpty()){
                int temp = listaBox.getSelectedIndex();
                base.changeTask(temp, jTextField1.getText());
                editButton.setEnabled(true);
                toggleList();
                edit = false;
                listaBox.setListData(base.getArrayList());
                listaBox.setSelectedIndex(temp);
            }
        }
        
    }//GEN-LAST:event_addEditTaskMouseClicked

    private void listaBoxMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listaBoxMouseClicked
        // TODO add your handling code here:
        setLabel();
    }//GEN-LAST:event_listaBoxMouseClicked

    private void listaBoxFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_listaBoxFocusGained
        // TODO add your handling code here:
        setLabel();
    }//GEN-LAST:event_listaBoxFocusGained

    private void listaBoxMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listaBoxMouseMoved
        // TODO add your handling code here:
        //setLabel();
    }//GEN-LAST:event_listaBoxMouseMoved

    private void listaBoxMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listaBoxMouseDragged
        // TODO add your handling code here:
        setLabel();
    }//GEN-LAST:event_listaBoxMouseDragged

    private void taskDoneMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_taskDoneMouseClicked
        // TODO add your handling code here:
        if (listaBox.getSelectedIndex() != -1 && listaBox.isEnabled()) {
            
            int index = listaBox.getSelectedIndex();
            
            base.toggleTask(listaBox.getSelectedIndex());
            
            listaBox.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = base.getArrayList();
            @Override
            public int getSize() { return strings.length; }
            @Override
            public String getElementAt(int i) { return strings[i]; }
            });
            
            listaBox.setSelectedIndex(index);
        }
        
        
    }//GEN-LAST:event_taskDoneMouseClicked

    private void clearTaskMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clearTaskMouseClicked
        // TODO add your handling code here:
        if (listaBox.getSelectedIndex() != -1 && listaBox.isEnabled()) {
            
            base.clearTask(listaBox.getSelectedIndex());
            listaBox.setListData(base.getArrayList());
            
            jTextField1.setText("");
        }

        
    }//GEN-LAST:event_clearTaskMouseClicked

    private void editButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_editButtonMouseClicked
        // TODO add your handling code here:
        if (editButton.isEnabled() && listaBox.getSelectedIndex() != -1){
            edit = true;
            editButton.setEnabled(false);
            toggleList();
        }
    }//GEN-LAST:event_editButtonMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(() -> {
            new GuiClass().setVisible(true);
        });
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addEditTask;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton clearAll;
    private javax.swing.JButton clearTask;
    private javax.swing.JButton editButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JList<String> listaBox;
    private javax.swing.JButton taskDone;
    // End of variables declaration//GEN-END:variables
}
